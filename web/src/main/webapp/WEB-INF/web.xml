<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">

	<display-name>sz platform</display-name>
	<distributable />


	<!-- 环境参数设置 -->

	<!--设置Log4j的配置文件的路径 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:conf/log4j.xml</param-value>
	</context-param>
	<!-- Define the basename for a resource bundle for I18N -->
	<context-param>
		<param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
		<param-value>i18n.ApplicationResources</param-value>
	</context-param>
	<!-- Fallback locale if no bundles found for browser's preferred locale -->
	<!-- Force a single locale using param-name 'javax.servlet.jsp.jstl.fmt.locale' -->
	<context-param>
		<param-name>javax.servlet.jsp.jstl.fmt.fallbackLocale</param-name>
		<param-value>zh_CN</param-value>
	</context-param>
	<!-- Context Configuration locations for Spring XML files -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		    classpath:net/bull/javamelody/monitoring-spring.xml
		    classpath:/conf/_spring-resources.xml
            classpath:/conf/spring-*.xml
            classpath*:/applicationContext.xml
            classpath:/conf/_spring-cxf.xml
            classpath:/conf/_spring-security.xml
        </param-value>
	</context-param>

	<!-- J2EE应用监控 JavaMelody -->
	<filter>
		<filter-name>monitoring</filter-name>
		<filter-class>net.bull.javamelody.MonitoringFilter</filter-class>
		<init-param>
			<param-name>url-exclude-pattern</param-name>
			<param-value>/styles/.*</param-value>
		</init-param>
		<init-param>
			<param-name>quartz-default-listener-disabled</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>monitoring</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<!-- 监听器 -->
	<listener>
		<listener-class>net.bull.javamelody.SessionListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.sz.core.web.listener.StartupListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.sz.core.web.listener.UserSessionListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.sz.core.web.jsp.EscapeXmlELResolverListener</listener-class>
	</listener>


	<!-- 国际化（本地化及编码） -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.sz.core.web.filter.EncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>contentType</param-name>
			<param-value>text/html;charset=UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/servlet/ValidJs</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>localeFilter</filter-name>
		<filter-class>org.sz.core.web.filter.LocaleFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>localeFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<!-- AOP(延迟加载/Request共享) -->
	<filter>
		<filter-name>lazyLoadingFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>lazyLoadingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>aopFilter</filter-name>
		<filter-class>org.sz.core.web.filter.AopFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>aopFilter</filter-name>
		<url-pattern>*.xht</url-pattern>
	</filter-mapping>


	<!-- GZipFilter has issues with XFire's service-listing servlet. -->
	<!-- http://issues.appfuse.org/browse/APF-863 -->
	<!-- And showing blank pages. http://issues.appfuse.org/browse/APF-1037 -->
	<!-- We recommend you configure gzipping in your servlet container. web 
		server, or load balancer. -->
	<!--filter> <filter-name>gzipFilter</filter-name> <filter-class>net.sf.ehcache.constructs.web.filter.GzipFilter</filter-class> 
		</filter -->


	<!--filter-mapping> <filter-name>gzipFilter</filter-name> <url-pattern>/*</url-pattern> 
		</filter-mapping -->


	<!-- URL Rewrite -->
	<filter>
		<filter-name>rewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
		<!-- sets up log level (will be logged to context log) can be: TRACE, DEBUG, 
			INFO (default), WARN, ERROR, FATAL, log4j, commons, sysout:{level} (ie, sysout:DEBUG) 
			if you are having trouble using normal levels use sysout:DEBUG -->
		<init-param>
			<param-name>logLevel</param-name>
			<param-value>commons</param-value>
		</init-param>
		<!-- set the amount of seconds the conf file will be checked for reload 
			can be a valid integer (0 denotes check every time, -1 denotes no reload 
			check, default -1) -->
		<init-param>
			<param-name>confReloadCheckInterval</param-name>
			<param-value>-1</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>rewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>exportFilter</filter-name>
		<filter-class>org.displaytag.filter.ResponseOverrideFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>exportFilter</filter-name>
		<url-pattern>/app/*</url-pattern>
	</filter-mapping>


	<!-- 安全检查 -->
	<filter>
		<filter-name>securityFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>springSecurityFilterChain</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>

	<!-- Spring MVC -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.sz.core.web.servlet.SpringMvcServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:conf/dispatcher-servlet.xml</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>*.xht</url-pattern>
	</servlet-mapping>


	<!-- WebService/CXF设置 -->
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>

	<!-- AJAX/DWR设置 -->
	<servlet>
		<servlet-name>dwr-invoker</servlet-name>
		<servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>
		<init-param>
			<param-name>config</param-name>
			<param-value>
				/WEB-INF/classes/conf/dwr.xml
			</param-value>
		</init-param>
		<init-param>
			<param-name>debug</param-name>
			<param-value>true</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>dwr-invoker</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>


	<servlet>
		<servlet-name>Connector</servlet-name>
		<servlet-class>net.fckeditor.connector.ConnectorServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Connector</servlet-name>
		<url-pattern>
			/jslib/fckeditor/editor/filemanager/connectors/*
		</url-pattern>
	</servlet-mapping>


	<servlet>
		<servlet-name>ValidCode</servlet-name>
		<servlet-class>org.sz.core.web.servlet.ValidCode</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>ValidJS</servlet-name>
		<servlet-class>org.sz.core.web.servlet.ValidJs</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ValidCode</servlet-name>
		<url-pattern>/servlet/ValidCode</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ValidJS</servlet-name>
		<url-pattern>/servlet/ValidJs</url-pattern>
	</servlet-mapping>



	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<error-page>
		<error-code>500</error-code>
		<location>/error.jsp</location>
	</error-page>
	<error-page>
		<error-code>400</error-code>
		<location>/index.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/403.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/404.jsp</location>
	</error-page>

	<jsp-config>
		<jsp-property-group>
			<url-pattern>*.jsp</url-pattern>
			<trim-directive-whitespaces>true</trim-directive-whitespaces>
		</jsp-property-group>
		<taglib>
			<taglib-uri>http://www.servicezon.com/functions</taglib-uri>
			<taglib-location>/WEB-INF/tld/SzTag.tld</taglib-location>
		</taglib>
	</jsp-config>

	<session-config>
		<session-timeout>15</session-timeout>
		<cookie-config>
			<http-only>true</http-only>
			<!--<secure>true</secure> -->
		</cookie-config>
		<tracking-mode>COOKIE</tracking-mode>
	</session-config>
</web-app>
