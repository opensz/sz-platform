<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="org.sz.platform.bpm.model.flow.BpmTaskComment">
	<resultMap id="BpmTaskComment" type="org.sz.platform.bpm.model.flow.BpmTaskComment">
		<id property="commentId" column="commentId" jdbcType="NUMERIC"/>
		<result property="runId" column="runId" jdbcType="NUMERIC"/>
		<result property="authorId" column="authorId" jdbcType="NUMERIC"/>
		<result property="author" column="author" jdbcType="VARCHAR"/>
		<result property="commentTime" column="commentTime" jdbcType="TIMESTAMP"/>
		<result property="content" column="content" jdbcType="VARCHAR"/>
		<result property="nodeName" column="nodeName" jdbcType="VARCHAR"/>
		<result property="taskId" column="taskId" jdbcType="NUMERIC"/>
		<result property="actDefId" column="actDefId" jdbcType="VARCHAR"/>
	</resultMap>
	
	<sql id="columns">
		commentId,runId,authorId,author,commentTime,content,nodeName,taskId,actDefId
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(commentId)"> AND commentId  =#{commentId} </if>
			<if test="@Ognl@isNotEmpty(runId)"> AND runId  =#{runId} </if>
			<if test="@Ognl@isNotEmpty(authorId)"> AND authorId  =#{authorId} </if>
			<if test="@Ognl@isNotEmpty(author)"> AND author  LIKE '%${author}%'  </if>
			<if test="@Ognl@isNotEmpty(commentTime)"> AND commentTime  =#{commentTime} </if>
			<if test="@Ognl@isNotEmpty(content)"> AND content  LIKE '%${content}%'  </if>
			<if test="@Ognl@isNotEmpty(nodeName)"> AND nodeName  LIKE '%${nodeName}%'  </if>
			<if test="@Ognl@isNotEmpty(taskId)"> AND taskId  =#{taskId} </if>
			<if test="@Ognl@isNotEmpty(actDefId)"> AND actDefId  LIKE '%${actDefId}%'  </if>
		</where>
	</sql>

	<insert id="add" parameterType="org.sz.platform.bpm.model.flow.BpmTaskComment">
		INSERT INTO bpm_task_comment
		(<include refid="columns"/>)
		VALUES
		(#{commentId,jdbcType=NUMERIC}, #{runId,jdbcType=NUMERIC}, #{authorId,jdbcType=NUMERIC}, #{author,jdbcType=VARCHAR}, #{commentTime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, #{nodeName,jdbcType=VARCHAR}, #{taskId,jdbcType=NUMERIC}, #{actDefId,jdbcType=VARCHAR})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM BPM_TASK_COMMENT 
		WHERE
		commentId=#{commentId}
	</delete>
	
	<update id="update" parameterType="org.sz.platform.bpm.model.flow.BpmTaskComment">
		UPDATE bpm_task_comment SET
		runId=#{runId,jdbcType=NUMERIC} , 
		authorId=#{authorId,jdbcType=NUMERIC} , 
		author=#{author,jdbcType=VARCHAR} , 
		commentTime=#{commentTime,jdbcType=TIMESTAMP} , 
		content=#{content,jdbcType=VARCHAR} , 
		nodeName=#{nodeName,jdbcType=VARCHAR} , 
		taskId=#{taskId,jdbcType=NUMERIC} , 
		actDefId=#{actDefId,jdbcType=VARCHAR} 
		WHERE
		commentId=#{commentId}
	</update>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="BpmTaskComment">
		SELECT <include refid="columns"/>
		FROM BPM_TASK_COMMENT
		WHERE
		commentId=#{commentId}
	</select>
	
	<select id="getAll" resultMap="BpmTaskComment">
		SELECT <include refid="columns"/>
		FROM BPM_TASK_COMMENT   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by commentId  desc
		</if>
	</select>
	<delete id="delByactDefId" parameterType="String">
		DELETE FROM BPM_TASK_COMMENT 
		WHERE actDefId=#{actDefId}
	</delete>
</mapper>
