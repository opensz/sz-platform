<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="org.sz.platform.bpm.model.flow.BpmAgent">
	<resultMap id="BpmAgent" type="org.sz.platform.bpm.model.flow.BpmAgent">
		<id property="id" column="id" jdbcType="NUMERIC"/>
		<result property="agentid" column="agentid" jdbcType="NUMERIC"/>
		<result property="defid" column="defid" jdbcType="NUMERIC"/>
		<result property="agentuserid" column="agentuserid" jdbcType="NUMERIC"/>
		<result property="touserid" column="touserid" jdbcType="NUMERIC"/>
		<result property="actdefid" column="actdefid" jdbcType="VARCHAR"/>
	</resultMap>
	
	<sql id="columns">
		id,agentid,defid,agentuserid,touserid,actdefid
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(id)"> AND id  =#{id} </if>
			<if test="@Ognl@isNotEmpty(agentid)"> AND agentid  =#{agentid} </if>
			<if test="@Ognl@isNotEmpty(defid)"> AND defid  =#{defid} </if>
			<if test="@Ognl@isNotEmpty(agentuserid)"> AND agentuserid  =#{agentuserid} </if>
			<if test="@Ognl@isNotEmpty(touserid)"> AND touserid  =#{touserid} </if>
			<if test="@Ognl@isNotEmpty(actdefid)"> AND actdefid  LIKE '%${actdefid}%'  </if>
		</where>
	</sql>

	<insert id="add" parameterType="org.sz.platform.bpm.model.flow.BpmAgent">
		INSERT INTO bpm_agent
		(<include refid="columns"/>)
		VALUES
		(#{id,jdbcType=NUMERIC}, #{agentid,jdbcType=NUMERIC}, #{defid,jdbcType=NUMERIC}, #{agentuserid,jdbcType=NUMERIC}, #{touserid,jdbcType=NUMERIC}, #{actdefid,jdbcType=VARCHAR})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM BPM_AGENT 
		WHERE
		id=#{id}
	</delete>
	<delete id="delByAgentId" parameterType="java.lang.Long">
		DELETE FROM BPM_AGENT 
		WHERE
		agentid=#{agentid}
	</delete>
	
	
	<update id="update" parameterType="org.sz.platform.bpm.model.flow.BpmAgent">
		UPDATE bpm_agent SET
		agentid=#{agentid,jdbcType=NUMERIC} , 
		defid=#{defid,jdbcType=NUMERIC} , 
		agentuserid=#{agentuserid,jdbcType=NUMERIC} , 
		touserid=#{touserid,jdbcType=NUMERIC} , 
		actdefid=#{actdefid,jdbcType=VARCHAR} 
		WHERE
		id=#{id}
	</update>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="BpmAgent">
		SELECT <include refid="columns"/>
		FROM BPM_AGENT
		WHERE
		id=#{id}
	</select>
	
	<select id="getNotInByAgentId" parameterType="java.lang.Long" resultType="java.lang.String">
		select a.proc_def_id_ from act_ru_task a where a.proc_def_id_ not in
	      (
	      select c.actdefid from bpm_agent c where c.agentid=#{agentid}
	      )
	</select>
	
	<select id="getAll" resultMap="BpmAgent">
		SELECT ba.id,ba.agentid,ba.defid,ba.agentuserid,ba.touserid,ba.actdefid,bd.subject
		FROM BPM_AGENT ba
		join BPM_DEFINITION bd on ba.defid=bd.defid
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by id  desc
		</if>
	</select>
	
	<select id="getByDefId" parameterType="java.lang.Long" resultMap="BpmAgent">
		SELECT <include refid="columns"/>
		FROM BPM_AGENT
		WHERE
		defid=#{defid}
	</select>
	
</mapper>
