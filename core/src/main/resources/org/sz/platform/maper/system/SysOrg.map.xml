<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="org.sz.platform.system.model.SysOrg">
	<resultMap id="Result" type="org.sz.platform.system.model.SysOrg">
		<id property="orgId" column="orgId" jdbcType="NUMERIC"/>
		<result property="demId" column="demId" jdbcType="NUMERIC"/>
		<result property="orgName" column="orgName" jdbcType="VARCHAR"/>
		<result property="orgDesc" column="orgDesc" jdbcType="VARCHAR"/>
		<result property="orgSupId" column="orgSupId" jdbcType="NUMERIC"/>
		<result property="path" column="path" jdbcType="VARCHAR"/>
		<result property="depth" column="depth" jdbcType="NUMERIC"/>
		<result property="orgType" column="orgType" jdbcType="NUMERIC"/>
		<result property="creatorId" column="creatorId" jdbcType="NUMERIC"/>
		<result property="createtime" column="createtime" jdbcType="TIMESTAMP"/>
		<result property="updateId" column="updateId" jdbcType="NUMERIC"/>
		<result property="updatetime" column="updatetime" jdbcType="TIMESTAMP"/>
		<result property="sn" column="sn" jdbcType="NUMERIC"/>
		<result property="webSite" column="webSite" jdbcType="VARCHAR"/>
		<result property="telephone" column="telephone" jdbcType="VARCHAR"/>
	</resultMap>
		
	
	<sql id="columns">
		orgId,demId,orgName,orgDesc,orgSupId,path,depth,orgType,creatorId,createtime,updateId,updatetime,sn,webSite,telephone
	</sql>
	
	<sql id="dynamicWhere">
		<where>
		
			<if test="@Ognl@isNotEmpty(demId)"> AND demId  =#{demId} </if>
			<if test="@Ognl@isNotEmpty(orgName)"> AND orgName  LIKE '%${orgName}%'  </if>
			<if test="@Ognl@isNotEmpty(orgSupId)"> AND orgSupId  =#{orgSupId} </if>
			<if test="@Ognl@isNotEmpty(orgSupIdStr)"> and ((orgSupId=#{orgSupIdStr}	or	orgId=#{orgSupIdStr}) and path like '%.${orgSupIdStr}.%')</if>
			<if test="@Ognl@isNotEmpty(path)"> AND path  LIKE '%${path}.%'  </if>
			<if test="@Ognl@isNotEmpty(orgIds)"> AND orgId  in ('${orgIds}')</if>
			<if test="@Ognl@isNotEmpty(orgType)"> AND orgType  in (${orgType}) </if>
		</where>
	</sql>

	<insert id="add" parameterType="org.sz.platform.system.model.SysOrg">
		INSERT INTO sys_org
		(<include refid="columns"/>)
		VALUES
		(#{orgId,jdbcType=NUMERIC}, #{demId,jdbcType=NUMERIC}, #{orgName,jdbcType=VARCHAR}, #{orgDesc,jdbcType=VARCHAR}, #{orgSupId,jdbcType=NUMERIC}, #{path,jdbcType=VARCHAR}, #{depth,jdbcType=NUMERIC}, #{orgType,jdbcType=NUMERIC}, #{creatorId,jdbcType=NUMERIC}, #{createtime,jdbcType=TIMESTAMP}, 
		#{updateId,jdbcType=NUMERIC}, #{updatetime,jdbcType=TIMESTAMP}, #{sn,jdbcType=NUMERIC}, #{webSite,jdbcType=VARCHAR},#{telephone,jdbcType=VARCHAR}
		)
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM sys_org 
		WHERE
		orgId=#{orgId}
	</delete>
	
	<update id="update" parameterType="org.sz.platform.system.model.SysOrg">
		UPDATE sys_org SET
		demId=#{demId,jdbcType=NUMERIC} , 
		orgName=#{orgName,jdbcType=VARCHAR} , 
		orgDesc=#{orgDesc,jdbcType=VARCHAR} , 
		orgSupId=#{orgSupId,jdbcType=NUMERIC} , 
		path=#{path,jdbcType=VARCHAR} , 
		depth=#{depth,jdbcType=NUMERIC} , 
		orgType=#{orgType,jdbcType=NUMERIC} , 
		creatorId=#{creatorId,jdbcType=NUMERIC} , 
		createtime=#{createtime,jdbcType=TIMESTAMP} , 
		updateId=#{updateId,jdbcType=NUMERIC} , 
		updatetime=#{updatetime,jdbcType=TIMESTAMP} , 
		sn=#{sn,jdbcType=NUMERIC},
		webSite=#{webSite,jdbcType=NUMERIC},
		telephone=#{telephone,jdbcType=NUMERIC}
		WHERE
		orgId=#{orgId}
	</update>
	
	<update id="updSn" parameterType="Map">
		UPDATE sys_org SET
		sn=#{sn,jdbcType=NUMERIC} 
		WHERE
		orgId=#{orgId}
	</update>
	
	<select id="getById" parameterType="java.lang.Long" resultType="org.sz.platform.system.model.SysOrg">
		SELECT  a.orgId,a.demId,a.orgName,a.orgDesc,a.orgSupId,a.path,a.depth,a.orgType,a.webSite,a.telephone,
                a.creatorId,a.createtime,a.updateId,a.updatetime,b.demName,
                c.orgName OrgSupName,d.fullname createName,u.fullname updateName,a.sn 
		FROM sys_org a 
		left join sys_org c on a.orgSupId=c.orgId 
		join sys_demension b on a.demId=b.demId  
		left join sys_user d on a.creatorId=d.userId
		left join sys_user u on a.updateId=u.userId
		where a.orgId=#{orgId} 
	</select>
	
	<select id="getAll" resultMap="Result">
		SELECT <include refid="columns"/>
		FROM sys_org   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by orgId  desc
		</if>
	</select>
	
	<delete id="delByPath" parameterType="Map">
		delete from sys_org where path like '%${path}%'
	</delete>
	
	<delete id="delByOrgId" parameterType="java.lang.Long">
		delete from sys_org where orgId =#{orgId}
	</delete>
	
	<select id="getOrgByOrgId" resultType="org.sz.platform.system.model.SysOrg">
		SELECT  a.orgId,a.demId,a.orgName,a.orgDesc,a.orgSupId,a.path,a.depth,a.orgType,a.webSite,a.telephone,
                a.creatorId,a.createtime,a.updateId,a.updatetime,b.demName,c.orgName OrgSupName  
		FROM sys_org a left join sys_org c on a.orgSupId=c.orgId join  sys_demension b on a.demId=b.demId  
		where 1=1	
		<if test="@Ognl@isNotEmpty(path)"> AND a.path  LIKE '${path}%'  </if>	
		<if test="@Ognl@isNotEmpty(orgName)"> AND a.orgName  LIKE '%${orgName}%'  </if>
		<if test="@Ognl@isNotEmpty(orgDesc)"> AND a.orgDesc  LIKE '%${orgDesc}%'  </if>
		<if test="@Ognl@isNotEmpty(orgType)"> AND a.orgType  in (${orgType}) </if>
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by orgId  desc
		</if>
	</select>
	<!-- 取得所有组织列表或按维度取得所有组织 -->
	<!-- (org.orgSupId=#{orgSupId}	or	org.orgid=#{orgSupId}) and  -->
	<select id="getOrgsByDemIdOrAll" parameterType="java.util.Map" resultType="org.sz.platform.system.model.SysOrg">
		select * from SYS_ORG org where 1=1 
		<if test="@Ognl@isNotEmpty(demId)">and org.demId=#{demId}</if>
		<if test="@Ognl@isNotEmpty(orgSupId)"> and ( org.path like '%${orgSupId}.%')</if>
		<if test="@Ognl@isNotEmpty(orgType)"> and org.orgtype in (${orgType}) </if>
		<if test="@Ognl@isNotEmpty(orgName)"> AND org.orgName  LIKE '%${orgName}%'  </if>
		 order by org.sn asc, org.path asc
	</select>
	
	<select id="getOrgs" parameterType="Long" resultType="org.sz.platform.system.model.SysOrg">
		select * from SYS_ORG org where org.demId=#{demId} order by org.path asc, org.sn asc
	</select>
			
	<select id="getOrgByDemId" parameterType="Long" resultType="org.sz.platform.system.model.SysOrg">
		SELECT  a.orgId,a.demId,a.orgName,a.orgDesc,a.orgSupId,a.path,a.depth,a.orgType,
                a.creatorId,a.createtime,a.updateId,a.updatetime,a.sn,a.webSite,a.telephone,b.demName
		FROM sys_org a join sys_demension b on a.demId=b.demId     
		where   a.demId=#{demId}
	    order by a.sn
	</select>
	
	<!-- 根据合同查询客户信息 -->
	<select id="getOrgByContractIds" parameterType="Map" resultType="org.sz.platform.system.model.SysOrg">
		SELECT  a.orgId,a.orgName
		FROM sys_org a,itsm_bpm_contract_org b where a.demId=1 and a.orgId=b.orgId and b.contractId in ('${contractId}')
		
	    order by a.sn
	</select>
	
	<select id="getOneByuserOrgId" resultType="java.lang.Long">
		SELECT userId  
		FROM sys_user_org      
		where userOrgId=#{userOrgId}	
	</select>
	
	<select id="getByUserId" parameterType="java.lang.Long"  resultType="org.sz.platform.system.model.SysOrg">
	  SELECT o.*,uo.isPrimary FROM sys_org o join  sys_user_org uo 
	  on o.orgId = uo.orgId 
	  where uo.userId=#{userId}
	</select>
	
	<select id="getOrgsByUserId" parameterType="java.lang.Long" resultType="org.sz.platform.system.model.SysOrg">
		select org.* from SYS_ORG org right join SYS_USER_ORG uo on uo.orgId=org.orgId where uo.userId=#{userId}
	</select>
	
	<select id="getByUserIdAndDemId" parameterType="java.lang.Long"  resultType="org.sz.platform.system.model.SysOrg">
	  SELECT DISTINCT o.*,uo.isPrimary FROM sys_org o join  sys_user_org uo 
	  on o.orgId = uo.orgId 
	  where uo.userId=#{userId}
	  and o.demId=#{demId}
	</select>
	
	<select id="getByDepth" resultType="org.sz.platform.system.model.SysOrg">
		select * from SYS_ORG where depth=#{depth} order by orgSupId asc	
	</select>
	
	<select id="getByOrgPath" resultType="org.sz.platform.system.model.SysOrg">
		select * from SYS_ORG where path LIKE '${path}%' order by sn
	</select>
	
	<select id="getPrimaryOrgByUserId" parameterType="Long" resultType="org.sz.platform.system.model.SysOrg">
		select a.* from SYS_ORG a,SYS_USER_ORG b where a.orgId=b.orgId and b.isPrimary=1 and b.userId=#{userId}
	</select>
	
	<select id="getPrimaryOrgAndDeptByUserId" parameterType="Long" resultType="org.sz.platform.system.model.SysOrg">
		select a.* from SYS_ORG a,SYS_USER_ORG b where a.orgId=b.orgId and b.isPrimary=1 and b.userId=#{userId}
	</select>
	
	<select id="getOrgByType" parameterType="Long" resultType="org.sz.platform.system.model.SysOrg">
		select * from SYS_ORG where orgType =#{orgType} order by sn
	</select>
</mapper>
