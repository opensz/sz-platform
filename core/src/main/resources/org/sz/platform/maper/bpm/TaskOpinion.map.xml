<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="org.sz.platform.bpm.model.flow.TaskOpinion">
	<resultMap id="TaskOpinion" type="org.sz.platform.bpm.model.flow.TaskOpinion">
		<id property="opinionId" column="opinionId" jdbcType="NUMERIC"/>
		<result property="taskName" column="taskName" jdbcType="VARCHAR"/>
		<result property="taskId" column="taskId" jdbcType="NUMERIC"/>
		<result property="taskKey" column="taskKey" jdbcType="VARCHAR"/>
		<result property="taskToken" column="taskToken" jdbcType="VARCHAR"/>
		<result property="actInstId" column="actInstId" jdbcType="VARCHAR"/>
		<result property="startTime" column="startTime" jdbcType="TIMESTAMP"/>
		<result property="endTime" column="endTime" jdbcType="TIMESTAMP"/>
		<result property="durTime" column="durTime" jdbcType="NUMERIC"/>
		<result property="exeUserId" column="exeUserId" jdbcType="NUMERIC"/>
		<result property="exeFullname" column="exeFullname" jdbcType="VARCHAR"/>
		<result property="opinion" column="opinion" jdbcType="VARCHAR"/>
		<result property="checkStatus" column="checkStatus" jdbcType="NUMERIC"/>
		<result property="actDefId" column="actDefId" jdbcType="VARCHAR"/>
		<result property="formDefId" column="formDefId" jdbcType="NUMERIC"/>
		<result property="fieldName" column="fieldName" jdbcType="VARCHAR"/>
	</resultMap>
	
	<sql id="columns">
		opinionId,taskName,taskId,taskKey,taskToken,actInstId,startTime,endTime,durTime,exeUserId,exeFullname,opinion,checkStatus,actDefId,formDefId,fieldName
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(opinionId)"> AND opinionId  =#{opinionId} </if>
			<if test="@Ognl@isNotEmpty(actInstId)"> AND actInstId  LIKE '%${actInstId}%'  </if>
			<if test="@Ognl@isNotEmpty(taskName)"> AND taskName  LIKE '%${taskName}%'  </if>
			<if test="@Ognl@isNotEmpty(taskId)"> AND taskId  =#{taskId} </if>
			<if test="@Ognl@isNotEmpty(startTime)"> AND startTime  =#{startTime} </if>
			<if test="@Ognl@isNotEmpty(endTime)"> AND endTime  =#{endTime} </if>
			<if test="@Ognl@isNotEmpty(durTime)"> AND durTime  =#{durTime} </if>
			<if test="@Ognl@isNotEmpty(exeUserId)"> AND exeUserId  =#{exeUserId} </if>
			<if test="@Ognl@isNotEmpty(exeFullname)"> AND exeFullname  LIKE '%${exeFullname}%'  </if>
			<if test="@Ognl@isNotEmpty(opinion)"> AND opinion  LIKE '%${opinion}%'  </if>
			<if test="@Ognl@isNotEmpty(checkStatus)"> AND checkStatus  =#{checkStatus} </if>
		</where>
	</sql>

	<insert id="add" parameterType="org.sz.platform.bpm.model.flow.TaskOpinion">
		INSERT INTO bpm_task_opinion
		(<include refid="columns"/>)
		VALUES
		(#{opinionId,jdbcType=NUMERIC}, #{taskName,jdbcType=VARCHAR}, #{taskId,jdbcType=NUMERIC},#{taskKey,jdbcType=VARCHAR},#{taskToken,jdbcType=VARCHAR},#{actInstId,jdbcType=VARCHAR},#{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{durTime,jdbcType=NUMERIC}, #{exeUserId,jdbcType=NUMERIC}, #{exeFullname,jdbcType=VARCHAR}, #{opinion,jdbcType=VARCHAR}, #{checkStatus,jdbcType=NUMERIC}, #{actDefId,jdbcType=VARCHAR}, #{formDefId,jdbcType=NUMERIC}, #{fieldName,jdbcType=VARCHAR})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM BPM_TASK_OPINION 
		WHERE
		opinionId=#{opinionId}
	</delete>
	
	<delete id="delByTaskId" parameterType="java.util.Map">
		DELETE FROM BPM_TASK_OPINION WHERE taskId=#{taskId}
	</delete>
	
	<update id="update" parameterType="org.sz.platform.bpm.model.flow.TaskOpinion">
		UPDATE bpm_task_opinion SET
		taskName=#{taskName,jdbcType=VARCHAR} , 
		taskId=#{taskId,jdbcType=NUMERIC} , 
		taskKey=#{taskKey,jdbcType=VARCHAR},
		taskToken=#{taskToken,jdbcType=VARCHAR},
		actInstId=#{actInstId,jdbcType=VARCHAR} , 
		startTime=#{startTime,jdbcType=TIMESTAMP} , 
		endTime=#{endTime,jdbcType=TIMESTAMP} , 
		durTime=#{durTime,jdbcType=NUMERIC} , 
		exeUserId=#{exeUserId,jdbcType=NUMERIC} , 
		exeFullname=#{exeFullname,jdbcType=VARCHAR} , 
		opinion=#{opinion,jdbcType=VARCHAR} , 
		checkStatus=#{checkStatus,jdbcType=NUMERIC} , 
		actDefId=#{actDefId,jdbcType=VARCHAR} , 
		formDefId=#{formDefId,jdbcType=NUMERIC} , 
		fieldName=#{fieldName,jdbcType=VARCHAR} 
		WHERE
		opinionId=#{opinionId}
	</update>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="TaskOpinion">
		SELECT <include refid="columns"/>
		FROM BPM_TASK_OPINION
		WHERE
		opinionId=#{opinionId}
	</select>
	
	<select id="getAll" resultMap="TaskOpinion">
		SELECT <include refid="columns"/>
		FROM BPM_TASK_OPINION   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by opinionId  desc
		</if>
	</select>
	
	<select id="getByTaskId" resultMap="TaskOpinion">
		SELECT * FROM BPM_TASK_OPINION where taskId=#{taskId}
	</select>
	
	<select id="getByActInstId" resultMap="TaskOpinion">
		SELECT * FROM BPM_TASK_OPINION where actInstId=#{actInstId} order by startTime desc
	</select>
	<delete id="delByActDefIdTaskOption" parameterType="java.lang.Long">
		DELETE FROM BPM_TASK_OPINION 
		WHERE
		actDefId=#{actDefId}
	</delete>
	<select id="getByFormDefAndInstanceId" resultMap="TaskOpinion">
		SELECT * FROM BPM_TASK_OPINION 
		where actInstId=#{actInstId} and formDefId=#{formDefId} order by startTime desc
	</select>
	
	<select id="getByActInstIdTaskKey" resultMap="TaskOpinion">
		SELECT * FROM BPM_TASK_OPINION where actInstId=#{actInstId} and taskKey=#{taskKey} order by endTime desc
	</select>
	
	<select id="getByActInstIdExeUserId" resultMap="TaskOpinion">
		SELECT * FROM BPM_TASK_OPINION where ACTINSTID=#{actInstId} and EXEUSERID=#{exeUserId} and ENDTIME IS NOT NULL order by endTime desc
	</select>
	
	
	<select id="getFormOptionsByInstance" resultMap="TaskOpinion">
		SELECT * FROM BPM_TASK_OPINION where actInstId=#{actInstId}  order by endTime desc
	</select>
	
</mapper>
