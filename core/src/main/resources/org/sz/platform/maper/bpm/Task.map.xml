<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="org.sz.core.bpm.model.ProcessTask">

  <resultMap id="TaskEntity" type="org.sz.core.bpm.model.ProcessTask">
	    <id property="id" column="ID_" jdbcType="VARCHAR"/>
	    <result property="revision" column="REV_" jdbcType="INTEGER"/>
	    <result property="name" column="NAME_" jdbcType="VARCHAR"/>
	    <result property="parentTaskId" column="PARENT_TASK_ID_" jdbcType="VARCHAR"/>
	    <result property="description" column="DESCRIPTION_" jdbcType="VARCHAR"/>
	    <result property="priority" column="PRIORITY_" jdbcType="INTEGER"/>
	    <result property="createTime" column="CREATE_TIME_" jdbcType="TIMESTAMP" />
	    <result property="owner" column="OWNER_" jdbcType="VARCHAR"/>
	    <result property="assignee" column="ASSIGNEE_" jdbcType="VARCHAR"/>
	    <result property="delegationState" column="DELEGATION_" jdbcType="VARCHAR"/>
	    <result property="executionId" column="EXECUTION_ID_" jdbcType="VARCHAR" />
	    <result property="processInstanceId" column="PROC_INST_ID_" jdbcType="VARCHAR" />
	    <result property="processDefinitionId" column="PROC_DEF_ID_" jdbcType="VARCHAR"/>
	    <result property="taskDefinitionKey" column="TASK_DEF_KEY_" jdbcType="VARCHAR"/>
	    <result property="dueDate" column="DUE_DATE_" jdbcType="TIMESTAMP"/>
	    <result property="subject" column="subject" jdbcType="VARCHAR"/>
	    <result property="processName" column="processName" jdbcType="VARCHAR"/>	    
  </resultMap>
	
	  <insert id="add" parameterType="org.sz.core.bpm.model.ProcessTask">
	    insert into ACT_RU_TASK (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,
	                      ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_)
	    values (#{id, jdbcType=VARCHAR},
	            1,
	            #{name, jdbcType=VARCHAR},
	            #{parentTaskId, jdbcType=VARCHAR},
	            #{description, jdbcType=VARCHAR},
	            #{priority, jdbcType=INTEGER},
	            #{createTime, jdbcType=TIMESTAMP},
	            #{owner, jdbcType=VARCHAR},
	            #{assignee, jdbcType=VARCHAR},
	            #{delegationState, jdbcType=VARCHAR},
	            #{executionId, jdbcType=VARCHAR},
	            #{processInstanceId, jdbcType=VARCHAR},
	            #{processDefinitionId, jdbcType=VARCHAR},
	            #{taskDefinitionKey, jdbcType=VARCHAR},
	            #{dueDate, jdbcType=TIMESTAMP}
	           )
	  </insert>
  
	<update id="setDueDate" parameterType="java.util.Map">
		update ACT_RU_TASK set DUE_DATE_=#{dueDate} where ID_=#{taskId}
	</update>
	
	<select id="getAll" parameterType="java.util.Map" resultMap="TaskEntity">
		SELECT task.*,run.subject subject,run.processName processName
		FROM ACT_RU_TASK task inner join BPM_PRO_RUN run
		on task.PROC_INST_ID_=run.actInstId
		where 1=1
		<if test="@Ognl@isNotEmpty(name)"> AND task.name_ LIKE '%${name}%' </if>
		<if test="@Ognl@isNotEmpty(subject)"> AND run.subject LIKE '%${subject}%' </if>
		<if test="@Ognl@isNotEmpty(processName)"> AND run.processName LIKE '%${processName}%' </if>
		<if test="@Ognl@isEmpty(orderField)">
			order by task.CREATE_TIME_ desc
		</if>
		<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
		</if>		
	</select>

	<select id="getAllMyTask" parameterType="java.util.Map" resultMap="TaskEntity">		
		SELECT distinct task.*,run.subject subject,run.processName processName
		FROM ACT_RU_TASK task inner join BPM_PRO_RUN run
		on task.PROC_INST_ID_=run.actInstId
        left join act_ru_identitylink ident 
        on task.id_=ident.TASK_ID_
		where (task.ASSIGNEE_ = #{userId} 
		or ( (task.ASSIGNEE_ is NULL) and ( task.OWNER_ = #{userId} or ident.USER_ID_ = #{userId}

		<if test="@Ognl@isNotEmpty(roleIds)">
		or (ident.GROUP_ID_ in (${roleIds}) and TYPE_='role')
		</if>
		<if test="@Ognl@isNotEmpty(depIds)">
		or (ident.GROUP_ID_ in (${depIds}) and TYPE_='dep')
		</if>
		<if test="@Ognl@isNotEmpty(posIds)">
		or (ident.GROUP_ID_ in (${posIds}) and TYPE_='pos')
		</if>
		)))
		<if test="@Ognl@isNotEmpty(name)"> AND task.name_ LIKE '%${name}%' </if>
		<if test="@Ognl@isNotEmpty(subject)"> AND run.subject LIKE '%${subject}%' </if>
		<if test="@Ognl@isNotEmpty(processName)"> AND run.processName LIKE '%${processName}%' </if>
		<if test="@Ognl@isEmpty(orderField)">
			order by task.CREATE_TIME_ desc
		</if>
		<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
		</if>
	</select>
	
	<select id="getCandidateUsers" parameterType="java.lang.Long" resultType="java.lang.Long">
		select distinct USER_ID_ from ACT_RU_IDENTITYLINK where TASK_ID_=#{taskId}
	</select>
	
	<select id="getAgentIdByTaskId" parameterType="java.util.Map" resultType="java.lang.Long">
	     select distinct a.agentuserid from sys_user_agent a where a.touserid=#{userId} and a.agentid not in 
      	(
         select b.agentid from sys_user_agent b where b.isall=0 and b.agentid not in 
         (
           select c.agentid from bpm_agent c where c.actdefid in
           ( 
            select d.proc_def_id_ from act_ru_task d where d.id_=#{taskId}
           )
         ) 
      )
	</select>

	<select id="getByAgent" parameterType="java.util.Map" resultMap="TaskEntity">
		SELECT task.*,run.subject subject,run.processName processName
		FROM ACT_RU_TASK task inner join BPM_PRO_RUN run
		on task.PROC_INST_ID_=run.actInstId
        left join act_ru_identitylink ident 
        on task.id_=ident.TASK_ID_
		where (task.ASSIGNEE_ = #{userId} or task.OWNER_ = #{userId}
		or ident.USER_ID_ = #{userId})
		<if test="@Ognl@isNotEmpty(actDefId)"> AND task.PROC_DEF_ID_ NOT IN(${actDefId})</if>		
		<if test="@Ognl@isNotEmpty(name)"> AND task.name_ LIKE '%${name}%' </if>
		<if test="@Ognl@isNotEmpty(subject)"> AND run.subject LIKE '%${subject}%' </if>
		<if test="@Ognl@isNotEmpty(processName)"> AND run.processName LIKE '%${processName}%' </if>
		<if test="@Ognl@isEmpty(orderField)">
			order by task.CREATE_TIME_ desc
		</if>
		<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
		</if>
	</select>
	
	<select id="getAllAgent" parameterType="java.util.Map" resultMap="TaskEntity">
		SELECT distinct task.*,run.subject subject,run.processName processName
		FROM ACT_RU_TASK task inner join BPM_PRO_RUN run
		on task.PROC_INST_ID_=run.actInstId
        left join act_ru_identitylink ident 
        on task.id_=ident.TASK_ID_
		where
		 (
			 (
				task.ASSIGNEE_ IN(
					SELECT sua.agentuserid 
					FROM SYS_USER_AGENT sua 
					WHERE sua.touserid=#{userId} AND sua.isvalid=1 AND sua.isall=1 AND sua.agentid not in					
					(
						select b.agentid from SYS_USER_AGENT b where (b.starttime is not null and b.starttime &gt; #{curTime,jdbcType=DATE}) 
																or ( b.endtime is not null and b.endtime &lt; #{curTime,jdbcType=DATE})
  						
					)
				)
				or 
				(task.assignee_ is null and 
					ident.USER_ID_ IN(
						SELECT sua.agentuserid 
						FROM SYS_USER_AGENT sua 
						WHERE sua.touserid=#{userId} AND sua.isall=1 AND sua.isvalid=1 AND sua.agentid not in 
						(
						select b.agentid from SYS_USER_AGENT b where (b.starttime is not null and b.starttime &gt; #{curTime,jdbcType=DATE}) 
																or ( b.endtime is not null and b.endtime &lt; #{curTime,jdbcType=DATE})
  						)
					)
				)
			)
			Or(
				task.PROC_DEF_ID_ IN(
					SELECT distinct ba.actdefid 
					FROM BPM_AGENT ba 
					join SYS_USER_AGENT sua on ba.agentid=sua.agentid 
					WHERE ba.touserid=#{userId} AND sua.isvalid=1 AND sua.agentid not in
					(
						select b.agentid from SYS_USER_AGENT b where (b.starttime is not null and b.starttime &gt; #{curTime,jdbcType=DATE}) 
																or ( b.endtime is not null and b.endtime &lt; #{curTime,jdbcType=DATE})
					)
				)
				AND(
					task.ASSIGNEE_ IN(
						SELECT sua.agentuserid 
						FROM SYS_USER_AGENT sua 
						WHERE sua.touserid=#{userId} AND sua.isvalid=1 AND sua.isall=0 AND sua.agentid not in
						(
						select b.agentid from SYS_USER_AGENT b where (b.starttime is not null and b.starttime &gt; #{curTime,jdbcType=DATE}) 
																or ( b.endtime is not null and b.endtime &lt; #{curTime,jdbcType=DATE})
						)
					)
					OR
					ident.USER_ID_ IN(
						SELECT sua.agentuserid 
						FROM SYS_USER_AGENT sua 
						WHERE sua.touserid=#{userId} AND sua.isvalid=1 AND sua.isall=0 AND sua.agentid not in
						(
						select b.agentid from SYS_USER_AGENT b where (b.starttime is not null and b.starttime &gt; #{curTime,jdbcType=DATE}) 
																or ( b.endtime is not null and b.endtime &lt; #{curTime,jdbcType=DATE})
						)
					)
			  	)
			)
		)
		<if test="@Ognl@isNotEmpty(name)"> AND task.name_ LIKE '%${name}%' </if>
		<if test="@Ognl@isNotEmpty(subject)"> AND run.subject LIKE '%${subject}%' </if>
		<if test="@Ognl@isNotEmpty(processName)"> AND run.processName LIKE '%${processName}%' </if>
		<if test="@Ognl@isEmpty(orderField)">
			order by task.CREATE_TIME_ desc
		</if>
		<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
		</if>
	</select>
	
	<select id="getAllMyEvent" parameterType="java.util.Map" resultMap="TaskEntity">		
		SELECT distinct task.*,run.subject subject,run.processName processName
		FROM ACT_RU_TASK task inner join BPM_PRO_RUN run
		on task.PROC_INST_ID_=run.actInstId
        left join act_ru_identitylink ident 
        on task.id_=ident.TASK_ID_
		where (task.ASSIGNEE_ = #{userId} 
		or ( (task.ASSIGNEE_ is NULL) and ( task.OWNER_ = #{userId} or ident.USER_ID_ = #{userId})))
		AND ((task.CREATE_TIME_ >= #{startDate} AND task.CREATE_TIME_ &lt;= #{endDate}) 
    	OR (task.DUE_DATE_ >= #{startDate} and task.DUE_DATE_ &lt;= #{endDate})) 
		ORDER BY task.CREATE_TIME_ 		
	</select>
	
	<select id="getReminderTask"  resultMap="TaskEntity">
		select * from ACT_RU_TASK a where exists (select 1 from bpm_task_due b where a.proc_def_id_=b.actdefid and a.task_def_key_=b.nodeid)
	</select>
	
	<select id="getTasksByRunId" parameterType="java.lang.Long" resultMap="TaskEntity">
		SELECT task.*,run.subject subject,run.processName processName
		FROM ACT_RU_TASK task inner join BPM_PRO_RUN run
		ON task.PROC_INST_ID_=run.actInstId
		where run.runId=#{runId}
	</select>
	
	
	<select id="getByTaskNameOrTaskIds" parameterType="java.lang.Long" resultMap="TaskEntity">
		SELECT distinct task.*,run.subject subject,run.processName processName
		FROM ACT_RU_TASK task inner join BPM_PRO_RUN run
		ON task.PROC_INST_ID_=run.actInstId
		where task.ASSIGNEE_ = #{userId} and ( task.NAME_ like '%#{taskName}%' or  task.ID_ in (#{taskIds}))
		order by task.CREATE_TIME_ desc
	</select>
	
	<update id="updateTaskAssignee">
		update ACT_RU_TASK set ASSIGNEE_=#{userId} where ID_=#{taskId}
	</update>
	
	<update id="updateTaskAssigneeNull">
		update ACT_RU_TASK set ASSIGNEE_=null where ID_=#{taskId}
	</update>
	
	<select id="updateTaskOwner">
		update ACT_RU_TASK set OWNER_=#{userId} where ID_=#{taskId}
	</select>
	
	<select id="getByTaskId" resultMap="TaskEntity">
		SELECT distinct task.*,run.subject subject,run.processName processName
		FROM ACT_RU_TASK task left join BPM_PRO_RUN run
		ON task.PROC_INST_ID_=run.actInstId where task.ID_=${taskId}
	</select>
	
	
	<!-- 返回抄送Task -->
	<select id="getCcTasks" parameterType="java.util.Map" resultMap="TaskEntity">
		SELECT distinct task.*,run.subject subject,run.processName processName
		FROM ACT_RU_TASK task inner join BPM_PRO_RUN run
		on task.PROC_INST_ID_=run.actInstId
		inner join BPM_TASK_CC cc on task.ID_ = cc.TASK_ID
		where cc.USER_ID = #{userId}
		<if test="@Ognl@isEmpty(orderField)">
			order by task.CREATE_TIME_ desc
		</if>
		<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
		</if>
	</select>
</mapper>
