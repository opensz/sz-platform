<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="org.sz.platform.bpm.model.form.BpmTableTemplate">
	<resultMap id="BpmTableTemplate" type="org.sz.platform.bpm.model.form.BpmTableTemplate">
		<id property="id" column="ID" jdbcType="NUMERIC"/>
		<result property="tableId" column="TABLE_ID" jdbcType="NUMERIC"/>
		<result property="categoryId" column="CATEGORY_ID" jdbcType="NUMERIC"/>
		<result property="htmlList" column="HTML_LIST" jdbcType="CLOB"/>
		<result property="htmlDetail" column="HTML_DETAIL" jdbcType="CLOB"/>
		<result property="templateName" column="TEMPLATE_NAME" jdbcType="VARCHAR"/>
		<result property="authorType" column="AUTHOR_TYPE" jdbcType="VARCHAR"/>
	</resultMap>
	
	<sql id="columns">
		ID,TABLE_ID,CATEGORY_ID,HTML_LIST,HTML_DETAIL,TEMPLATE_NAME,AUTHOR_TYPE
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(id)"> AND ID  =#{id} </if>
			<if test="@Ognl@isNotEmpty(tableId)"> AND TABLE_ID  =#{tableId} </if>
			<if test="@Ognl@isNotEmpty(categoryId)"> AND CATEGORY_ID  =#{categoryId} </if>
			<if test="@Ognl@isNotEmpty(htmlList)"> AND HTML_LIST  LIKE '%${htmlList}%'  </if>
			<if test="@Ognl@isNotEmpty(htmlDetail)"> AND HTML_DETAIL  LIKE '%${htmlDetail}%'  </if>
			<if test="@Ognl@isNotEmpty(templateName)"> AND TEMPLATE_NAME  LIKE '%${templateName}%'  </if>
		</where>
	</sql>

	<insert id="add" parameterType="org.sz.platform.bpm.model.form.BpmTableTemplate">
		INSERT INTO BPM_TABLE_TEMPLATE
		(ID,TABLE_ID,CATEGORY_ID,HTML_LIST,HTML_DETAIL,TEMPLATE_NAME,AUTHOR_TYPE)
		VALUES
		(#{id,jdbcType=NUMERIC}, #{tableId,jdbcType=NUMERIC}, #{categoryId,jdbcType=NUMERIC}, #{htmlList,jdbcType=CLOB}, #{htmlDetail,jdbcType=CLOB}, #{templateName,jdbcType=VARCHAR}, #{authorType,jdbcType=NUMERIC})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM BPM_TABLE_TEMPLATE 
		WHERE
		ID=#{id}
	</delete>
	
	<update id="update" parameterType="org.sz.platform.bpm.model.form.BpmTableTemplate">
		UPDATE BPM_TABLE_TEMPLATE SET
		TABLE_ID=#{tableId,jdbcType=NUMERIC} , 
		CATEGORY_ID=#{categoryId,jdbcType=NUMERIC} , 
		HTML_LIST=#{htmlList,jdbcType=CLOB} , 
		HTML_DETAIL=#{htmlDetail,jdbcType=CLOB} , 
		TEMPLATE_NAME=#{templateName,jdbcType=VARCHAR},
		AUTHOR_TYPE=#{authorType,jdbcType=NUMERIC}
		WHERE
		ID=#{id}
	</update>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="BpmTableTemplate">
		SELECT <include refid="columns"/>
		FROM BPM_TABLE_TEMPLATE
		WHERE
		ID=#{id}
	</select>
	
	<select id="getAll" resultMap="BpmTableTemplate">
		SELECT <include refid="columns"/>
		FROM BPM_TABLE_TEMPLATE   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>
	</select>
	
	<select id="getByUserIdFilter" resultMap="BpmTableTemplate">
		select distinct 
		temp.id,temp.table_id,temp.category_id,temp.template_name,temp.author_type,b.tablename,c.typename categoryName from bpm_table_template temp
		left join SYS_GL_TYPE type on type.typeid=temp.category_id 
		inner join bpm_form_table b on temp.table_id=b.tableid left outer join  sys_gl_type c on temp.category_id=c.typeid 
	     where (
	      temp.id in(
	        select distinct rig.template_id from bpm_table_temprights rig where rig.search_type=0
	        and (
	          (rig.owner_Id = ${userId} and rig.right_Type=1)
	           <if test="@Ognl@isNotEmpty(roleIds)">or (rig.owner_Id in (${roleIds}) and rig.right_Type=2)</if>
	           <if test="@Ognl@isNotEmpty(orgIds)">or (rig.owner_Id in (${orgIds}) and rig.right_Type=3)</if>
	        )
	      )
	      or temp.category_id in (
	        select distinct rs.category_id from bpm_table_temprights rs where rs.search_Type=1 and ((rs.owner_Id = ${userId} and rs.right_Type=1)
	         <if test="@Ognl@isNotEmpty(roleIds)">or (rs.owner_Id in (${roleIds}) and rs.right_Type=2)</if>
	         <if test="@Ognl@isNotEmpty(orgIds)">or (rs.owner_Id in (${orgIds}) and rs.right_Type=3)</if>
	        )
	      )
	      or (
		      	not exists
		        (
		          select rs.* from bpm_table_temprights rs where temp.id=rs.template_id and rs.search_Type=0	         
		        )
	          	and not exists
	            (
	              select rig.* from bpm_table_temprights rig where temp.category_id=rig.category_id and rig.search_type=1
	            ) 
            )
	    )
	    <if test="@Ognl@isNotEmpty(nodePath)">
	      and type.nodepath like '${nodePath}%'  
	    </if>
	   	<if test="@Ognl@isNotEmpty(templateName)"> AND temp.TEMPLATE_NAME  LIKE '%${templateName}%'  </if>
	</select>
	
	<select id="getList" resultMap="BpmTableTemplate">
		select a.*,b.tablename,c.typename categoryName  from bpm_table_template a inner join bpm_form_table b on a.table_id=b.tableid left outer join  sys_gl_type c
		on a.category_id=c.typeid 
		<where>
			<if test="@Ognl@isNotEmpty(templateName)"> AND a.TEMPLATE_NAME  LIKE '%${templateName}%'  </if>
			<if test="@Ognl@isNotEmpty(nodePath)">and c.nodepath like '${nodePath}%'</if>
		</where>		
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>		
	</select>
</mapper>
